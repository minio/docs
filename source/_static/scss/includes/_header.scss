.header {
    height: $header-height;
    background-color: $header-bg;
    display: flex;
    align-items: center;
    box-shadow: 0 0 0.75rem rgba($black, 0.1);
    width: 100%;
    z-index: $z-index-header;
    flex-shrink: 0;
    display: flex;
    align-items: center;

    @extend %content-padding;

    .toggle-icon {
        @include breakpoint-min(breakpoints(lg)) {
            display: none;
        }
    } 

    .toggle-icon--menu {
        margin-left: auto;
    }
}

.logo {
    flex-shrink: 0;
    display: inline-flex;

    @include breakpoint-max(breakpoints(lg)) {
        margin-left: 1rem;
    }

    &>img {
        height: $logo-height;
        box-shadow: none;
    }
}

.nav {
	z-index: 1;
	transition: opacity 300ms, transform 300ms;
	display: flex;
	margin-left: auto;
	font-size: 0.9375rem;

	@include breakpoint-max(breakpoints(lg)) {
		height: 100vh;
		width: $nav-mobile-width;
		position: fixed;
		right: 0;
		top: 0;
		flex-direction: column;
		transform: translate3d($nav-mobile-width, 0, 0);
		opacity: 0;
		box-shadow: $nav-mobile-box-shadow;
		overflow-y: auto;
		background-color: $nav-mobile-bg;
        padding-top: 2.5rem;
	}

    & > .toggle-icon {
        @include breakpoint-min(breakpoints(lg)) {
            display: none;
        }

        position: absolute;
        top: 0.7rem;
        right: 0.7rem;
    }
}

.nav-toggled {
	.nav {
        @include breakpoint-max(breakpoints(lg)) {
            transform: translate3d(0, 0, 0);
            opacity: 1;
            z-index: $nav-active-z-index;
        }
    }
}

.nav__item {
	position: relative;

	&:hover {
		.nav__dropdown {
			opacity: 1;
			pointer-events: auto;
		}

		.nav__link--dropdown {
			& > span {
				&:before {
					opacity: 0;
				}
			}
		}
	}
}

.nav__link {
	line-height: 100%;

	&,
	&:hover {
		color: $nav-link-color;
	}

	@include breakpoint-min(breakpoints(lg)) {
		padding: 0.625rem 1.25rem 0.8125rem;
		margin-left: 0.25rem;
		cursor: pointer;

		& > span {
			position: relative;

			&:before {
				height: 1px;
				width: 100%;
				background-color: $nav-link-color;
				position: absolute;
				bottom: -8px;
				left: 0;
				content: "";
				transform: translateY(5px);
				opacity: 0;
				transition: opacity 300ms, transform 300ms;
			}
		}

		&:not(.nav__link--dropdown) {
			&:hover {
				& > span {
					&:before {
						transform: translateY(0);
						opacity: 1;
					}
				}
			}
		}
	}

	@include breakpoint-max(breakpoints(lg)) {
		font-weight: $font-weight-medium;
		color: $black;
		padding: 0.75rem 1.75rem;
	}
}

.nav__link--active {
	& > span {
		&:before {
			opacity: 1;
			transform: translateY(0);
		}
	}
}

.nav__link--download {
	border: 1px solid $theme-red;
	transition: background-color 300ms, color 300ms;
	border-radius: $border-radius;

	&:hover {
		background-color: $theme-red;
		color: $white;
	}

	@include breakpoint-max(breakpoints(lg)) {
		margin: 1.5rem;
		text-align: center;
	}
}

.nav__dropdown {
	@include breakpoint-min(breakpoints(lg)) {
		margin-top: 0.3125rem;
		width: 385px;
		transform: translateX(calc(-50% + 3rem));
		position: absolute;
		left: 0;
		top: 90%;
		opacity: 0;
		transition: opacity 200ms;
		pointer-events: none;

		&:before {
			left: 50%;
			margin-left: -5px;
			content: "";
			width: 0;
			height: 0;
			border-style: solid;
			border-width: 0 10px 8px;
			border-color: transparent transparent $white transparent;
			position: absolute;
			top: -8px;
		}

		.nav__dropdown__inner {
			padding: 1.5rem;
			max-height: calc(100vh - 5rem);
			overflow-y: auto;
			border-radius: $border-radius;
			box-shadow: 0 0.0625rem 1.25rem rgba($black, 0.13);
			background-color: $white;
		}
	}

	@include breakpoint-max(breakpoints(lg)) {
		.nav__dropdown__inner {
			background-color: $nav-sub-hover-bg;
			padding: 0.5rem 1rem;
			margin-bottom: 1rem;
		}
	}
}

.nav__dropdown--lg {
	@include breakpoint-min(breakpoints(lg)) {
		width: 800px;

        .nav__dropdown__inner {
            padding: 3.5rem;
        }
	}

	@media (max-width: map_get($breakpoints, xl)) and (min-width: map_get($breakpoints, lg)) {
		width: 500px;

        .nav__dropdown__inner {
            padding: 1.5rem;
        }
	}

	
}

.nav__sub {
	padding: 0.6rem 0.75rem;
	font-weight: $font-weight-medium;
	color: $black;
	border-radius: 0.25rem;

	@include breakpoint-max(breakpoints(lg)) {
		font-size: 0.85rem;
		font-weight: normal;
	}

	&,
	& > small {
		display: block;
	}

	& > small {
		color: #4b4b4b;
		font-weight: normal;
		font-size: 0.8rem;
		opacity: 0.75;
		margin-top: 0.25rem;

		@include breakpoint-max(breakpoints(lg)) {
			display: none;
		}
	}

	&:hover {
		background-color: $nav-sub-hover-bg;
		color: $black;
	}
}

.nav__arrow {
	width: 9px;
	height: 5px;
	background: $nav-arrow-icon;
	display: inline-block;
	margin-left: 4px;

	@include breakpoint-max(breakpoints(lg)) {
		display: none;
	}
}

.nav__feature {
	@include breakpoint-min(breakpoints(lg)) {
		display: flex;
		align-items: flex-start;
	}
}

.nav__column {
	flex: 1;
}

.nav__column--main {
	@include breakpoint-min(breakpoints(lg)) {
        padding-right: 1rem;

		& > .nav__sub {
			margin-top: 1rem;
		}
	}
}

.nav__column__title {
	text-transform: uppercase;
	font-size: 0.6rem;
	padding-left: 0.75rem;
	margin-bottom: 0.2rem;

	@include breakpoint-max(breakpoints(lg)) {
		margin-top: 1rem;
	}
}

.nav__lead {
	&,
	&:hover {
		color: $black;
	}

	display: flex;
	align-items: center;

	& > img {
		width: 30px;
		flex-shrink: 0;
		margin-right: 0.75rem;

		@include breakpoint-max(breakpoints(lg)) {
			display: none;
		}
	}
}

.nav__jump {
	@include breakpoint-min(breakpoints(lg)) {
		padding-left: 2.6rem;
		margin-top: -0.2rem;

		& > a {
			&,
			&:hover {
				color: $black;
			}

			&:hover {
				text-decoration: underline;
			}

			font-weight: normal;
			display: block;
			font-size: 0.8rem;
			margin-top: 0.5rem;
		}
	}

	@include breakpoint-max(breakpoints(lg)) {
		display: none;
	}
}

.toggle-icon {
    width: 2.5rem;
    height: 2.5rem;
    cursor: pointer;
    border-radius: $border-radius;
    transition: background-color 300ms;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    background-repeat: no-repeat;
    background-position: center;

    &:hover {
        background-color: $toggle-icon-hover-bg;
    }
}

$toggleIcons: (
    docs: 'docs.svg',
    menu: 'menu.svg',
    close: 'close-circle.svg',
    toc: 'toc.svg'
);

@each $name, $icon in $toggleIcons {
    .toggle-icon--#{$name} {
        background-image: url(../img/icons/#{$icon});
    }
}