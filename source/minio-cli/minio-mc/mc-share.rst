============
``mc share``
============

.. default-domain:: minio

.. contents:: On This Page
   :local:
   :depth: 1

.. mc:: mc share

Description
-----------

.. start-mc-share-desc

The :mc:`mc share` command generates temporary URLs with integrated
access credentials for uploading or downloading objects to an S3-compatible
host. The temporary URL expires after a configurable time limit.

.. end-mc-share-desc

For more information on shareable object URLs, see the Amazon S3 
documentation on :aws-docs:`Pre-Signed URLs 
<AmazonS3/latest/dev/ShareObjectPreSignedURL.html>`.

Syntax
------

.. |command| replace:: :mc-cmd:`mc share download`
.. |versionid| replace:: :mc-cmd-option:`~mc share download version-id`
.. |alias| replace:: :mc-cmd-option:`~mc share download TARGET`

.. code-block:: shell

   mc share COMMAND

:mc:`~mc share` supports the following commands:

.. mc-cmd:: download
   :fullpath:

   Generates a URL for using an HTTP GET request to retrieve the
   object(s).

   :mc-cmd:`~mc share download` has the following syntax:

   .. code-block:: shell

      mc share download [FLAGS] TARGET [TARGET ...]

   :mc-cmd:`~mc share download` supports the following arguments:

   .. mc-cmd:: TARGET

      The full path to the object for which :mc:`mc share` generates a URL.

      If any ``TARGET`` specifies a path to a bucket, :mc:`mc share` *must*
      include the :mc-cmd-option:`mc share recursive` argument.

   .. mc-cmd:: recursive, r
      :option:
      
      Recursively generate URLs for all objects in a :mc-cmd:`mc share TARGET`
      bucket or bucket prefix. 
         
      Required if any ``TARGET`` specifies a path to a bucket or bucket prefix.

   .. mc-cmd:: version-id, vid
      :option:

      .. include:: /includes/facts-versioning.rst
         :start-after: start-version-id-desc
         :end-before: end-version-id-desc

   .. mc-cmd:: expire, E
      :option:

      Set the expiration time limit for all generated URLs.
      
      Specify a string with format ``##h##m##s`` format. For example:
      ``12h34m56s`` for an expiry of 12 hours, 34 minutes, and 56 seconds
      after URL generation.

      Defaults to ``168h`` or 168 hours (7 days).


.. mc-cmd:: upload

   Generates a ``CURL`` command for uploading object(s) using ``HTTP POST``.

   :mc-cmd:`~mc share upload` has the following syntax:

   .. code-block:: shell

      mc share upload [FLAGS] TARGET [TARGET ...]

   :mc-cmd:`~mc share upload` supports the following arguments:

   .. mc-cmd:: TARGET

      The full path to the object for which :mc:`mc share upload` generates a
      URL. 
      
      If the ``TARGET`` specifies a single object, :mc-cmd:`mc share upload`
      names the uploaded object based on the name specified to ``TARGET``.

      If the ``TARGET`` specifies a path to a bucket or bucket prefix,
      :mc-cmd:`mc share upload` *must* include the
      :mc-cmd-option:`~mc share upload recursive` argument. 

   .. mc-cmd:: recursive, r
      :option:
      
      Modifies the CURL URL to support uploading objects to a bucket or bucket
      prefix. Required if any ``TARGET`` specifies a path to a bucket or bucket
      prefix. The modified CURL output resembles the following:

      .. code-block:: shell

         curl ... -F key=TARGET/<NAME> -F file=@<FILE>

      Replace ``<FILE>`` with the path to the file to upload.

      Replace ``<NAME>`` with the name of the file once uploaded.
         

   .. mc-cmd:: expire, E
      :option:

      Set the expiration time limit for all generated URLs.
      
      Specify a string with format ``##h##m##s`` format. For example:
      ``12h34m56s`` for an expiry of 12 hours, 34 minutes, and 56 seconds
      after URL generation.

      Defaults to ``168h`` or 168 hours (7 days).


.. mc-cmd:: list

   List all unexpired upload or download URLs generated by 
   :mc-cmd:`mc share download` and :mc-cmd:`mc share upload`.

   :mc-cmd:`~mc share list` has the following syntax:

   .. code-block:: shell

      mc share list SUBCOMMAND

   :mc-cmd:`~mc share download` supports the following subcommands:

   .. mc-cmd:: upload
   
      List all unexpired URLs generated by :mc-cmd:`mc share upload`.

   .. mc-cmd:: download
   
      List all unexpired URLs generated by :mc-cmd:`mc share download`.

Behavior
--------

Examples
--------

Generate a CURL GET Command for an Object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/play-alias-available.rst
   :start-after: play-alias-only
   :end-before: end-play-alias-only

.. code-block:: shell
   :class: copyable

   mc share download play/mybucket/myobject.txt

To specify a custom expiry, pass the ``--expiry`` flag. The following
command sets a 4 hour expiry for the generated URL:

.. code-block:: shell
   :class: copyable

   mc share download --expiry 4h play/mybucket/myobject.txt

Generate a CURL GET Command For Each Object in Bucket or Bucket Prefix
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/play-alias-available.rst
   :start-after: play-alias-only
   :end-before: end-play-alias-only

.. code-block:: shell
   :class: copyable

   mc share download --recursive play/mybucket/

The command returns a CURL command for each object in the bucket or bucket
prefix.

To specify a custom expiry, pass the ``--expiry`` flag. The following
command sets a 4 hour expiry for the generated URL:

.. code-block:: shell
   :class: copyable

   mc share download --recursive --expiry 4h play/mybucket/

Generate a CURL POST Command for an Object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/play-alias-available.rst
   :start-after: play-alias-only
   :end-before: end-play-alias-only

.. code-block:: shell

   mc share upload play/mybucket/myobject.csv

The command returns a CURL command for uploading an object to the specified
bucket with the object name. Replace the ``<FILE>`` string in the returned
CURL command with the path to the file to upload.

To specify a custom expiry, pass the ``--expiry`` flag. The following
command sets a 4 hour expiry for the generated URL:

.. code-block:: shell

   mc share upload --expiry 4h play/mybucket/myobject.csv

Generate a CURL POST Command for a Bucket or Bucket Prefix
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/play-alias-available.rst
   :start-after: play-alias-only
   :end-before: end-play-alias-only

.. code-block:: shell

   mc share upload --recursive play/mybucket/photos

The command returns a CURL command for uploading an object to the specified
bucket prefix. Replace the ``<FILE>>`` string in the returned
CURL command with the path to the file to upload. Replace the ``<NAME>``
string in the returned CURL command with the name of the file in the bucket.

To specify a custom expiry, pass the ``--expiry`` flag. The following
command sets a 4 hour expiry for the generated URL:

.. code-block:: shell

   mc share upload --recursive --expiry 4h play/mybucket/photos

You can use a shell script loop to recursively upload the contents of a bucket
to the S3-compatible service. The following example uses a ``for in`` 
loop:

.. code-block:: shell

   #!/bin/sh

   for file in ~/Documents/photos/
   do
      curl https://play.min.io/mybucket/ \
        -F policy=AAAAA -F x-amz-algorithm=AWS4-HMAC-SHA256 \
        -F x-amz-credential=AAAA/us-east-1/s3/aws4_request \
        -F x-amz-date=20200812T202556Z \
        -F x-amz-signature=AAAA \
        -F bucket=rkbucket -F key=mydata/${file} -F file=@${file}

   done

Defer to the documented best practices for your preferred scripting language
for iterating through files in a directory.